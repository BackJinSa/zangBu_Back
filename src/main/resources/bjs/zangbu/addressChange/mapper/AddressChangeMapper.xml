<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="bjs.zangbu.addressChange.mapper.AddressChangeMapper">
    <select id="getRegisterCertRequest" resultType="bjs.zangbu.addressChange.dto.request.ResRegisterCertRequest">
        select m.birth,
               m.identity,
               m.phone,
               m.name,
               m.telecom
        from member m
        where m.member_id = #{memberId}
    </select>
    <insert id="insert"
            parameterType="bjs.zangbu.addressChange.vo.AddressChange"
            useGeneratedKeys="true"
            keyProperty="addressChangeId">
        INSERT INTO address_change
            (member_id, res_number, res_user_addr, res_move_in_date)
        VALUES (#{memberId,jdbcType=VARCHAR},
                #{resNumber,jdbcType=VARCHAR},
                #{resUserAddr,jdbcType=VARCHAR},
                #{resMoveInDate,jdbcType=TIMESTAMP})
    </insert>
    <select id="existsByMemberAddrDate" resultType="int">
        SELECT COUNT(1)
        FROM address_change
        WHERE member_id = #{memberId,jdbcType=VARCHAR}
          AND res_user_addr = #{resUserAddr,jdbcType=VARCHAR}
          AND res_move_in_date = #{resMoveInDate,jdbcType=TIMESTAMP}
    </select>

    <!-- 사용자의 주민등록초본에 기록된 모든 주소 조회 -->
    <select id="selectUserAddresses" resultType="java.lang.String">
        SELECT DISTINCT res_user_addr
        FROM address_change
        WHERE member_id = #{memberId}
          AND res_user_addr IS NOT NULL
          AND res_user_addr != ''
        ORDER BY res_move_in_date DESC
    </select>

    <!-- memberId 존재 여부 확인 -->
    <select id="existsByMemberId" resultType="int">
        SELECT COUNT(1)
        FROM address_change
        WHERE member_id = #{memberId,jdbcType=VARCHAR}
    </select>

    <!-- zonecode 기준 매칭 -->
    <select id="countLivedByMemberAndBuildingZone" resultType="int">
        SELECT COUNT(1)
        FROM address_change ac
                 JOIN building b ON b.building_id = #{buildingId}
                 JOIN complex_list cl ON cl.complex_id = b.complex_id
        WHERE ac.member_id = #{memberId}
          AND ac.res_user_addr IS NOT NULL
          AND cl.zonecode IS NOT NULL
          AND TRIM(ac.res_user_addr) = TRIM(cl.zonecode)
    </select>
</mapper>
