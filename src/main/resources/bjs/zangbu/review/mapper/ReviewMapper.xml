<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bjs.zangbu.review.mapper.ReviewMapper">

    <resultMap id="ReviewListResponseMap" type="bjs.zangbu.review.dto.response.ReviewListResponse">
        <id column="reviewId" property="reviewId"/>
        <result column="reviewerNickName" property="reviewerNickName"/>
        <result column="content" property="content"/>
        <result column="rank" property="rank"/>
        <result column="floor" property="floor"/>
        <result column="createdAt" property="createdAt"/>
    </resultMap>

    <select id="selectByBuilding" resultMap="ReviewListResponseMap">
        SELECT
            review_id         AS reviewId,
            reviewer_nickname AS reviewerNickName,
            LEFT(content, 15) AS content,
            `rank`,
            '중층'            AS floor,
            created_at        AS createdAt
        FROM review
        WHERE building_id = #{buildingId}
        ORDER BY created_at DESC
    </select>

    <select id="countByBuilding" resultType="long">
        SELECT COUNT(*)
        FROM review
        WHERE building_id = #{buildingId}
    </select>

    <!-- 추가된 selectLatestReviewRank -->
    <select id="selectLatestReviewRank" resultType="int">
        SELECT `rank`
        FROM review
        WHERE building_id = #{buildingId}
        ORDER BY created_at DESC
            LIMIT 1
    </select>


    <resultMap id="ReviewDetailResponseMap" type="bjs.zangbu.review.dto.response.ReviewDetailResponse">
        <id column="reviewId" property="reviewId"/>
        <result column="buildingId" property="buildingId"/>
        <result column="reviewerNickname" property="reviewerNickname"/>
        <result column="rank" property="rank"/>
        <result column="content" property="content"/>
        <result column="createdAt" property="createdAt"/>
    </resultMap>

    <!-- 리뷰 상세보기 기능 쿼리 -->
    <select id="selectById" resultMap="ReviewDetailResponseMap">
        SELECT
            review_id          AS reviewId,
            building_id        AS buildingId,
            reviewer_nickname  AS reviewerNickname,
            `rank`,
            content,
            DATE_FORMAT(created_at, '%Y-%m-%dT%H:%i:%s') AS createdAt
        FROM review
        WHERE review_id = #{reviewId}
    </select>


    <!-- 리뷰 생성(insertReview) -->
    <insert id="insertReview"
            parameterType="bjs.zangbu.review.mapper.ReviewInsertParam"
            useGeneratedKeys="true"
            keyProperty="reviewId">
        INSERT INTO review
        (building_id,
         member_id,
         reviewer_nickname,
         `rank`,
         content,
         floor,
         created_at)
        VALUES
            (#{buildingId},
             #{memberId},
             #{reviewerNickname},
             #{rank},
             #{content},
             #{floor},
             NOW())
    </insert>


    <!-- 리뷰 삭제 -->
    <delete id="deleteReview" parameterType="long">
        DELETE FROM review
        WHERE review_id = #{reviewId}
    </delete>

    <!-- building_id로 complex_id 조회 -->
    <select id="selectComplexIdByBuildingId" resultType="long">
        SELECT complex_id
        FROM building
        WHERE building_id = #{buildingId}
    </select>
</mapper>
