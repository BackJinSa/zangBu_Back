<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="bjs.zangbu.member.mapper.MemberMapper">
    <!--새로운 비밀번호로 변경-->
    <update id="updatePassword">
        update member
        set password = #{newPassword}
        where member_id = #{memberId}
    </update>

    <!--새로운 닉네임으로 변경-->
    <update id="updateNickname">
        update member
        set nickname = #{newNickname}
        where member_id = #{memberId}
    </update>

    <!--알림 수신 여부 변경-->
    <update id="updateFcmConsent">
        UPDATE member
        SET consent = #{consent}
        WHERE member_id = #{memberId}
    </update>

    <!--bookmark 삭제-->
    <delete id="deleteBookMark">
        delete
        from bookmark
        where member_id = #{memberId}
          and building_id = #{buildingId}
    </delete>

    <!--회원 정보 삭제-->
    <delete id="deleteMemberId">
        delete
        from member
        where member_id = #{memberId}
    </delete>

    <!--회원 정보 가져오기-->
    <select id="get" resultType="bjs.zangbu.security.account.vo.Member">
        select email, nickname
        from member
        where member_id = #{memberId}
    </select>

    <!--기존 비밀번호 가져오기-->
    <select id="findPasswordByMemberId" resultType="java.lang.String">
        select password
        from member
        where member_id = #{memberId}
    </select>

    <!--닉네임 중복 확인하기-->
    <select id="countByNickname" resultType="java.lang.Integer">
        select count(*)
        from member
        where nickname = #{nickname}
    </select>

    <!--id로 북마크한 매물 가져오기-->
    <!--/*북마크된 매물 리스트를 조회하면서, 각 매물의 가장 최신 이미지 한 장만 가져오기*/-->
    <select id="getBookmarksByMemberId" resultMap="BookmarksByMemberIdMap">
        select b.bookmark_id,
               b.building_id,
               b.complex_id,
               bd.seller_nickname,
               bd.sale_type,
               bd.price,
               bd.deposit,
               bd.bookmark_count,
               bd.created_at,
               bd.building_name,
               bd.seller_type,
               bd.property_type,
               bd.move_date,
               bd.info_oneline AS info_one_line,
               bd.info_building,
               img.image_url,
               bd.contact_name,
               bd.contact_phone,
               bd.facility,
               bd.size
        FROM bookmark b
                 /*북마크된 매물 id와 전체 매물 id 기준으로 조인 -> 북마크된 매물의 상세 정보를 가져오기*/
                 INNER JOIN building bd ON b.building_id = bd.building_id

            /*building과 가장 최신 이미지 정보를 LEFT JOIN*/
            /*이미지 없더라도 누락되지 않게 left join*/
                 LEFT JOIN (SELECT il1.building_id, il1.image_url
                            FROM image_list il1
                                     INNER JOIN (SELECT building_id, MAX(image_id) AS max_id
                                                 FROM image_list
                                                 GROUP BY building_id) il2
                                                ON il1.building_id = il2.building_id
                                                    AND il1.image_id = il2.max_id
        ) img ON bd.building_id = img.building_id
        /*로그인한 사용자가 북마크한 매물만 가져옴*/
        WHERE b.member_id = #{memberId}
        /*매물 생성일 최신순으로*/
        ORDER BY bd.created_at DESC
    </select>

    <!--현재 닉네임 가져오기-->
    <select id="getNicknameByMemberId" resultType="java.lang.String">
        select nickname
        from member
        where member_id = #{memberId}
    </select>

    <!--알림 수신 여부 조회-->
    <select id="selectFcmConsentByMemberId" resultType="java.lang.Boolean">
        SELECT consent
        FROM member
        WHERE member_id = #{memberId}
    </select>

    <select id="findByEmail" resultType="bjs.zangbu.security.account.vo.Member">
        SELECT * FROM member WHERE email = #{email}
    </select>

    <!--생년월일 조회-->
    <select id="getBirthByMemberId" resultType="java.lang.String">
        select birth
        from member
        where member_id = #{memberId}
    </select>

    <!--주민번호 뒷자리 조회-->
    <select id="getIdentityByMemberId" resultType="java.lang.String">
        select identity
        from member
        where member_id = #{memberId}
    </select>

    <!--member id로 member 조회-->
    <select id="findByMemberId" resultType="bjs.zangbu.security.account.vo.Member">
        select *
        from member
        where member_id = #{memberId}
    </select>

    <!--  getBookmarksByMemberId join 한 결과값 -->
    <resultMap id="BookmarksByMemberIdMap" type="bjs.zangbu.member.dto.join.BookmarkBuilding">
        <id property="bookmarkId" column="bookmark_id"/>
        <result property="buildingId" column="building_id"/>
        <result property="complexId" column="complex_id"/>
        <result property="sellerNickname" column="seller_nickname"/>
        <result property="saleType" column="sale_type"/>
        <result property="price" column="price"/>
        <result property="deposit" column="deposit"/>
        <result property="bookmarkCount" column="bookmark_count"/>
        <result property="createdAt" column="created_at"/>
        <result property="buildingName" column="building_name"/>
        <result property="sellerType" column="seller_type"/>
        <result property="propertyType" column="property_type"/>
        <result property="moveDate" column="move_date"/>
        <result property="infoOneLine" column="info_one_line"/>
        <result property="infoBuilding" column="info_building"/>
        <result property="imageUrl" column="image_url"/>
        <result property="contactName" column="contact_name"/>
        <result property="contactPhone" column="contact_phone"/>
        <result property="facility" column="facility"/>
        <result property="size" column="size"/>
    </resultMap>




    <!-- VO 매핑 정의 -->
    <resultMap id="BuildingImgResultMap" type="bjs.zangbu.building.vo.BuildingImg">
        <id     property="buildingId"       column="building_id"/>
        <result property="sellerNickname"   column="seller_nickname"/>
        <result property="saleType"         column="sale_type"/>
        <result property="price"            column="price"/>
        <result property="deposit"          column="deposit"/>
        <result property="bookmarkCount"    column="bookmark_count"/>
        <result property="createdAt"        column="created_at"/>
        <result property="buildingName"     column="building_name"/>
        <result property="sellerType"       column="seller_type"/>
        <result property="propertyType"     column="property_type"/>
        <result property="moveDate"         column="move_date"/>
        <result property="infoOneline"      column="info_oneline"/>
        <result property="infoBuilding"     column="info_building"/>
        <result property="contactName"      column="contact_name"/>
        <result property="contactPhone"     column="contact_phone"/>
        <result property="facility"         column="facility"/>
        <result property="size"             column="size"/>
        <result property="memberId"         column="member_id"/>
        <result property="complexId"        column="complex_id"/>

        <!-- 대표 이미지 -->
        <result property="representativeImageUrl" column="representative_image_url"/>
    </resultMap>

    <select id="findMyBuildingsWithImg" resultMap="BuildingImgResultMap">
        SELECT
            b.building_id,
            b.seller_nickname,
            b.sale_type,
            b.price,
            b.deposit,
            b.bookmark_count,
            b.created_at,
            b.building_name,
            b.seller_type,
            b.property_type,
            b.move_date,
            b.info_oneline,
            b.info_building,
            b.contact_name,
            b.contact_phone,
            b.facility,
            b.size,
            b.member_id,
            b.complex_id,

            /* 대표 이미지: 가장 먼저 등록된 1장 (image_id ASC) */
            (
                SELECT il.image_url
                FROM image_list il
                WHERE il.building_id = b.building_id
                ORDER BY il.image_id ASC
                LIMIT 1
            ) AS representative_image_url

        FROM building b
        WHERE b.member_id = #{memberId}
        ORDER BY b.created_at DESC
    </select>

</mapper>